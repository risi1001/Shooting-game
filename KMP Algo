#include<bits/stdc++.h>
using namespace std;

#define int long long

void cpc()
{
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}

vector<int> LPS(string s)
{
	int n = s.length();
	vector<int> lps(n);
	lps[0] = 0;
	int j = 0;

	for (int i = 1; i < n; i++)
	{
		if (s[i] == s[j])
		{
			lps[i] = ++j;
		}
		else
		{
			while (j > 0 && s[i] != s[j])
				j = lps[j - 1];
			if (s[i] == s[j])
				lps[i] = ++j;
			else
			{lps[i] = 0;}
		}
	}
	return lps;
}

int KMP(string s, string p)
{
	if (p.length() == 0)
	{return 0;}

	if (s.length() < p.length())
	{return -1;}

	if (s.length() == p.length())
	{	if (s == p)
			return 0;
		else
		{return -1;}
	}

	int i = 0, j = 0;
	vector<int> lps = LPS(p);
	while (i < s.length() && j < p.length())
	{
		if (s[i] == p[j])
		{i++; j++;}
		else
		{
			if (j != 0 && s[i] != p[j])
			{j = lps[j - 1];}
			else
			{i++;}
		}
	}

	if (j == p.length())
		return (i - p.length());

	return -1;
}



int32_t main()
{
	cpc();
	string s, p;
	cin >> s >> p;

	cout << (KMP(s, p));

	return 0;
}
